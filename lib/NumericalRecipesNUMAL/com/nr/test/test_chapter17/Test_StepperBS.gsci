

import static com.nr.test.NRTestUtil.maxel
import static com.nr.test.NRTestUtil.vecsub

import com.nr.ode.*
import com.nr.sf.Bessjy


  class rhs_StepperBS implements DerivativeInf {
    public void derivs(final double x,double[] y,double[] dydx) {
      dydx[0]= -y[1]
      dydx[1]=y[0]-(1.0/x)*y[1]
      dydx[2]=y[1]-(2.0/x)*y[2]
      dydx[3]=y[2]-(3.0/x)*y[3]
    }
    public void jacobian(final double x, double[] y, double[] dfdx, double[][] dfdy){}
  }

    nvar=4
    atol=1.0e-6;  rtol=atol; h1=0.01; hmin=0.0; x1=1.0; x2=2.0;
    
    y= new double[nvar]
    yout= new double[nvar]
    yexp= new double[nvar]
    globalflag=false

    
    // Test StepperBS
    println("Testing StepperBS")

    bess = new Bessjy()
    for (i=0;i<nvar;i++) {
      y[i]=bess.jn(i,x1)
      yexp[i]=bess.jn(i,x2)
    }
    
    out=new Output(1500)
    d = new rhs_StepperBS()
    s = new StepperBS()
    ode = new Odeint(y,x1,x2,atol,rtol,h1,hmin,out,d,s)
    ode.integrate()

    for (i=0;i<nvar;i++) {
      yout[i]=out.ysave[i][out.count-1];
      printf("%f  %f\n", yout[i],yexp[i]);
    }

    plot(out.ysave[1], out.ysave[2])

    sbeps = 1.0e-8
    println(maxel(vecsub(yout,yexp)))
    localflag = (maxel(vecsub(yout,yexp)) > sbeps)
    globalflag = globalflag || localflag
    if (localflag) {
      fail("*** StepperBS: Inaccurate integration")
      
    }

    if (globalflag)  println("Failed\n")
    else  println("Passed\n")
  
  

